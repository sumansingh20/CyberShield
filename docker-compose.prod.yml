version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: unified-toolkit-db-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: unified_admin
      MONGO_INITDB_ROOT_PASSWORD: UnifiedPenTest2024!MongoSecure#Database$Production
      MONGO_INITDB_DATABASE: unified-toolkit
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_prod:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./backups:/backups
    networks:
      - unified-toolkit-network-prod
    command: mongod --auth --bind_ip_all

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: unified-toolkit-cache
    restart: unless-stopped
    command: redis-server --requirepass UnifiedRedis2024!Cache#Secure$Password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - unified-toolkit-network-prod

  # Next.js Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: unified-toolkit-app-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://unified_admin:UnifiedPenTest2024!MongoSecure#Database$Production@mongodb:27017/unified-toolkit?authSource=admin
      - JWT_SECRET=UnifiedPenTest2024!SecureJWTKey#Prod$Version&ForSumanKumar
      - JWT_REFRESH_SECRET=RefreshToken2024!Ultra#Secure$PenTest&Platform@Unified
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=unified.pentest.platform@gmail.com
      - EMAIL_PASS=${EMAIL_APP_PASSWORD}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=+1-555-PENTEST
      - RECAPTCHA_SITE_KEY=${RECAPTCHA_SITE_KEY}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - NEXTAUTH_URL=https://pentest.unified-platform.com
      - NEXTAUTH_SECRET=NextAuth2024!Production#Secret$Unified&Platform
      - REDIS_URL=redis://:UnifiedRedis2024!Cache#Secure$Password@redis:6379
      - LOG_LEVEL=info
      - RATE_LIMIT_MAX_REQUESTS=100
      - TOOLS_TIMEOUT=300
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/var/log/unified-pentest
      - ./data/tools:/app/data/tools
      - ./data/results:/app/data/results
    networks:
      - unified-toolkit-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: unified-toolkit-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - unified-toolkit-network-prod
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Log Aggregation (Optional)
  fluentd:
    image: fluentd:v1.16-1
    container_name: unified-toolkit-logs
    restart: unless-stopped
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - ./logs:/var/log/unified-pentest
    depends_on:
      - app
    networks:
      - unified-toolkit-network-prod

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: unified-toolkit-metrics
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - unified-toolkit-network-prod

volumes:
  mongodb_data_prod:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  unified-toolkit-network-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
